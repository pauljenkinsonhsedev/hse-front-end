<!DOCTYPE html>
<html lang="en-GB"><!-- InstanceBegin template="/Templates/dev-kit.dwt" codeOutsideHTMLIsLocked="false" --><head>

<script src="../../assets/v5-js/v5-cookies.js"></script>
<!-- Anti-flicker snippet (recommended) If installing optimise with GTM, specifcy GTM container ID  -->
<style>
.async-hide { opacity: 0 !important }
</style>

<script>
    if (Cookies.get('optInGoogleTracking') === 'true') {
  (function(a,s,y,n,c,h,i,d,e){s.className+=' '+y;h.start=1*new Date;
h.end=i=function(){s.className=s.className.replace(RegExp(' ?'+y),'')};
(a[n]=a[n]||[]).hide=h;setTimeout(function(){i();h.end=null},c);h.timeout=c;
})(window,document.documentElement,'async-hide','dataLayer',4000,
{'GTM-PJPWMNL':true});
    }</script>
<!-- Google Tag Manager -->
<script>

      if (Cookies.get('optInGoogleTracking') === 'true') {
        (function (w, d, s, l, i) {
          w[l] = w[l] || [];
          w[l].push({'gtm.start': new Date().getTime(), event: 'gtm.js'});
          var f = d.getElementsByTagName(s)[0],
            j = d.createElement(s),
            dl = l != 'dataLayer'
              ? '&l=' + l
              : '';
          j.async = true;
          j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
          f
            .parentNode
            .insertBefore(j, f);
        })(window, document, 'script', 'dataLayer', 'GTM-PJPWMNL');

        // Siteimprove analytics

        /*<![CDATA[*/
        (function() {
        var sz = document.createElement('script'); sz.type = 'text/javascript'; sz.async = true;
        sz.src = '//siteimproveanalytics.com/js/siteanalyze_6798.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(sz, s);
        })();
        /*]]>*/

      }
    </script>
<!-- End Google Tag Manager -->
	
	


<link rel="stylesheet" href="../../assets/v5-css/v5.min.css" type="text/css" media="screen,print">



<!-- Page title and meta -->
	
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- InstanceBeginEditable name="doctitle" -->
<title>Cookie Banner - HSE.GOV.UK Design System</title>
<meta name="Description" content="HSE's job is to protect people against risks to health or safety arising out of work activities. Provides advice, guidance, regulations and inspections." />
<meta name="Keywords" content="HSE, health and safety executive,  occupational ill-health, occupational health and safety, accident, safety, employee safety, health and safety at work act, law" />
<!-- Custom CSS -->
<!-- InstanceEndEditable -->
	
<!-- InstanceBeginEditable name="meta" -->
<meta name="HSE.updated" content="">	
<!-- InstanceEndEditable -->
	
<meta name="HSE.contentType" content="default">

<link rel="shortcut icon" href="../../favicon.ico">
<link rel="apple-touch-icon" href="../../assets/v4-images/shared/apple-touch-icon.png">
<link rel="home" href="../../index.htm">


<!-- ie 11 fix for left-hand navigation -->
<script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>


</head>
<body class="template normalFont">

<!-- GTM -->

<noscript>
<iframe title="GTM-PJPWMNL" src="https://www.googletagmanager.com/ns.html?id=GTM-PJPWMNL" height="0" width="0" style="display:none;visibility:hidden" aria-hidden="true"></iframe>
</noscript>

<section id="top" aria-label="Skip to content">



	<a href="#contentContainer" class="skip">Skip to content</a>



</section>




<section id="printBanner" aria-label="Print banner"> 
<img src="../../assets/v4-images/website/print/print-logo.jpg" width="193" height="65" alt="Health and Safety Executive" id="printLogo">
</section>

<header id="headerContainer">
  <div id="header">
    <div class="headerTop header js-header">

	  
	  
      <div id="headerLogo" class="headerLogo"><a href="../../index.htm"><svg aria-hidden="true" width="45" height="46" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M21.508 7.328V.984a.976.976 0 00-.975-.974H.03v.974h19.11l-3.897 3.912H.029v.974H14.29l-3.904 3.905H.029v.974H9.41l-.772.787a.982.982 0 00-.274.678.88.88 0 00.065.304l.722 2.114H.029v.982H9.41l1.314 3.904H.029v.975h13.67a.974.974 0 01.974.967v2.93H.029v.974h20.504a.975.975 0 00.974-.974v-8.25a.974.974 0 00-.974-.98h-2.952a.967.967 0 01-.952-.975.989.989 0 01.209-.6l4.46-5.622a.923.923 0 00.224-.591M43.953.984V.01H23.456a.975.975 0 00-.967.974v6.352a.924.924 0 00.224.591l4.518 5.695a.902.902 0 01.173.527.967.967 0 01-.953.974h-2.995a.974.974 0 00-.967.982v8.292a.968.968 0 00.967.975h20.497v-.975H29.31V21.51a.974.974 0 01.975-.974h13.67v-1.003H33.25l1.314-3.905h9.382v-.974h-9.05l.721-2.122c.034-.1.053-.205.058-.31a.945.945 0 00-.274-.679l-.78-.786h9.383v-.975H33.625l-3.897-3.904h14.225v-.975H28.725L24.856.984h19.097zM1.111 30.575c0-.664-.288-.981-1.111-1.003v-.44c1.06.072 1.992.144 2.887.144s1.826-.072 2.887-.144v.454c-.816 0-1.104.34-1.104 1.004v4.749h5.773v-4.764c0-.664-.288-.981-1.104-1.003v-.44c1.054.072 1.985.144 2.887.144.902 0 1.819-.072 2.887-.144v.454c-.816 0-1.104.34-1.104 1.004v12.565c0 .671.288.982 1.104 1.003v.455c-1.054-.072-1.992-.145-2.887-.145s-1.826.073-2.887.145v-.455c.816 0 1.104-.332 1.104-1.003v-5.514H4.67v5.514c0 .671.288.982 1.104 1.003v.455c-1.054-.072-1.992-.145-2.887-.145s-1.819.073-2.887.145v-.455c.823 0 1.111-.332 1.111-1.003v-12.58zm16.831 8.661c.477 2.62 2.317 3.84 4.886 3.84 1.444 0 3.457-.412 3.457-2.166 0-1.443-1.494-1.826-2.59-2.165l-1.704-.505c-2.447-.722-4.893-1.747-4.893-4.576 0-3.717 3.608-4.843 7.167-4.843a13.304 13.304 0 014.467.765c0 1.725.087 3.19.188 4.44h-.462c-.498-2.217-2.44-3.242-4.598-3.242-1.198 0-3.211.383-3.211 2.036 0 1.32 1.154 1.703 2.165 1.992l2.512.721c2.424.722 4.676 1.581 4.676 4.692 0 3.11-3.219 4.785-7.123 4.785a15.77 15.77 0 01-5.204-.859c0-1.891-.072-3.55-.188-4.944l.455.029zm15.113-8.48c0-.679-.288-.99-1.104-1.01v-.455h12.002c0 1.313.072 2.583.195 3.882h-.455c-.238-1.313-.57-1.775-1.869-1.775h-5.218v4.143h3.284c1.075 0 1.241-.361 1.386-1.213h.44a20.984 20.984 0 00-.144 2.266c.006.763.054 1.524.144 2.281h-.455c-.144-.859-.31-1.22-1.385-1.22h-3.284v4.72h5.485c1.292 0 1.696-.432 2.107-2.446h.6c-.217 1.97-.26 3.24-.29 4.554H31.937v-.447c.816 0 1.105-.347 1.105-1.01l.014-12.27z" fill="#fff"/></svg>Health and Safety<br>Executive</a></div>
      
      

      
      
      

    </div>

    <!-- JS Main Navigation -->

    <div class="menuContainer">
      <nav id="main-menu"  class="menu js-menu">
        <ul>
          <li class="home"><a href="../../index.htm">Design system</a></li>
          <li class="style"><a href="../../style/index.htm">Styles</a></li>
          <li class="components"><a href="../../components/index.htm">Components</a></li>
          <li class="patterns"><a href="../../patterns/index.htm">Patterns</a></li>
          <li class="template"><a href="../index.htm">Framework</a></li>
		  <li class="development"><a href="../../development/index.htm">Development</a></li>
        </ul>
      </nav>
    </div>
  </div>

  
  
  
</header>

  
  




<nav id="breadCrumb" aria-label="Previous pages:">
  <div class="breadCrumbContainer">

<!-- InstanceBeginEditable name="Breadcrumbs" -->
		<ol>
			<li class="home"><a href="../../index.htm">Design System</a></li>
			<li><a href="../index.htm">Framework</a></li>
			<li><a href="index.htm">Template components</a></li>
			<li>Cookie banner</li>
		</ol>
		<!-- InstanceEndEditable -->
  </div>
  <div id="backTo">
    <p class="backto"><a id="backnav" href="index.htm">Back to</a></p>
  </div>
</nav>





<div id="pageContainer" class="v5">








<!-- Beta content page -->





<nav id="navSecondary" aria-label="Secondary">
	
<button id="navSecondary-button" aria-pressed="false" aria-expanded="false" aria-controls="menu" class="btn btn-small btn-mobile" data-toggle="collapse" data-target=".collapse" data-text="Collapse"><span class="menu-mobile-text">Open menu</span><svg aria-hidden="true" tabindex="-1" data-menu-icon="menu" width="25px" height="25px" viewBox="0 0 25 25" fill="none" xmlns="http://www.w3.org/2000/svg"><path id="menu-mobile-path" d="M6 8.1H19V6.9H6V8.1ZM6 18.1H19V16.9H6V18.1ZM6 13.1H19V11.9H6V13.1Z" fill="currentColor"></path></svg></button>

<!-- InstanceBeginEditable name="Subnav" --><!-- #BeginLibraryItem "/Library/_v5-framework.lbi" --><div id="menu" class="collapse">
  <ul>
    <li class="first"><a href="../index.htm">Framework</a></li>
	  <li><a href="#">Template</a>
      <ul>
        <li><a href="../template/template.htm">Applying template</a></li>
        <li><a href="../template/regions.htm">Editable regions</a></li>
        <li><a href="../template/param.htm">Parameters</a></li>
        <li><a href="../template/accessibility.htm">Accessibility</a></li>
		<li><a href="../template/library-items.htm">Library items</a></li>
        <li><a href="#">Components</a>
          <ul>
            <li><a href="index.htm">Overview</a></li>
            <li><a href="notification-banner.htm">Notification banner</a></li>
            <li><a href="user-satisfaction.htm">User satisfaction</a></li>
            <li><a href="document-title-meta.htm">Document title and meta elements</a></li>
            <li><a href="page-notification.htm">Page notification</a></li>
            <li><a href="breadcrumbs.htm">Breadcrumbs</a></li>
            <li><a href="beta-banner.htm">Beta survey</a></li>
            <li><a href="secondary-nav.htm">Secondary navigation</a></li>
            <li><a href="cookies.htm">Cookie banner</a></li>
          </ul>
        </li>
      </ul>
    </li>
	  <li><a href="#">Workflow</a>
		  <ul>
			  <li><a href="../../development/workflow/index.htm">Workflow</a></li>
			  <li><a href="#">Gitflow</a>
			  <ul>
				  <li><a href="../../development/workflow/gitflow.htm">Gitflow</a></li>
				  <li><a href="../../development/workflow/gitflow-features.htm">Feature branches</a></li>
				  <li><a href="../../development/workflow/gitflow-releases.htm">Release branches</a></li>
				  <li><a href="../../development/workflow/gitflow-hotfixes.htm">Hotfixes</a></li>
				</ul>
			  </li>
			  <li><a href="../../development/workflow/client-tools.htm">Git-client management tools</a></li>
		  </ul>
	  </li>
    
    <li><a href="#">Testing</a>
      <ul>
		<li><a href="../../development/testing/index.htm">Overview</a></li>
        <li><a href="../../development/testing/browsers-devices.htm">Browsers and devices</a></li>
		<li><a href="../../development/testing/test.htm">Test page</a></li>
      </ul>
    </li>
	<li><a href="#">Javascript</a>
      <ul>
		<li><a href="../../development/javascript/index.htm">Overview</a></li>
        <li><a href="../../development/javascript/create-a-basic-component.htm">Create a component</a></li>
      </ul>
    </li>
  </ul>
</div>
<!-- #EndLibraryItem --><!-- InstanceEndEditable --> </nav>




<main id="contentContainer" class="columnbetacontentpage column2">




<!-- InstanceBeginEditable name="content" -->

  <h1>Cookie banner</h1>


  <p>Tell users about the cookies you’re setting on their device and let them accept or reject different types of non-essential cookies.</p>

  <h2>Why we need it</h2>

  <p>The Cookie banner componenet is built into the website framework and is not optional, it gives users the means of consenting to non-essential cookies being set on their device. It is coupled with a cookies page that gives a user more information and control of cookies set on HSE.GOV.UK</p>

  <p>We need the banner to notify users that we are using essential cookies to make the site work but also give them the option to opt-in or opt-out of analytics which requires the use of cookies to track users.</p>


  <h2>How it works</h2>

  <p>Show the cookie banner every time the user accesses your service until they either:</p>
  <ul>
    <li>accept or reject cookies using the buttons in the cookie banner</li>
    <li>save their cookie preferences on the service&rsquo;s cookies page</li>
  </ul>
  <p>Once the user has accepted or rejected cookies, the cookie banner should:</p>
  <ul>
    <li>hide the cookie banner message</li>
    <li>show a confirmation message — and a &lsquo;hide&rsquo; button to let the user close the banner</li>
    <li>set a cookie to save the user&rsquo;s preferences for 1 year</li>
  </ul>
  <p>Make sure the cookie banner does not:</p>
  <ul>
    <li>show when the user visits again, once their preferences have been saved</li>
    <li>set any non-essential cookies unless the user accepted them on a previous visit</li>
  </ul>

  <hr>

  <h2>Code</h2>

  <p>Cookie preference control works using a combination of user input with HTML form, user interaction with cookie banner, essential cookies for storing user cookie preferences and JS conditionals in page template.</p>

  <div class="box">

	<h3>Contents</h3>

   <ul>

	<li><a href="#cookie-preferences">Cookie preferences</a></li>
	<li><a href="#template-code">Template code</a></li>
	<li><a href="#cookies-page">Cookies page (HTML form)</a></li>
	<li><a href="#banner-html">Banner HTML</a></li>

   </ul>

  </div>



  <h2 id="cookie-preferences">Cookie preferences</h2>

  <p>The JS file <a href="cookie-preferences.js">cookie-preferences.js</a>, is used to set and modify cookies, <a href="https://github.com/js-cookie/js-cookie/tree/latest#readme">JS Cookie</a> is used for managing cookies.</p>

  <p>The file contains JS functions to perform the following functions:</p>

  <ul>

   <li>Set variable for cookie base settings (path,domain,secure,sameSite,expires)</li>
   <li>Modify <strong>cookies_policy</strong> based on cookies page form input</li>
   <li>Modify <strong>optInGoogleTracking</strong> cookie to track users analytics preference</li>
   <li>Sets and unsets GA cookies based on <strong>cookies_policy</strong> value</li>
   <li>Display dialog box if user saves preferences on cookies page</li>
   <li>Close cookie banner on user clicking hide button and storing action as a value in <strong>hide_banner</strong> cookie</li>
   <li>Control cookie banner displaying depending on value of <strong>hide_banner</strong> cookie</li>
   <li>Smooth scrolling to banner message after form saves</li>
   <li>Sets value of <strong>cookie_status</strong> based on user switching toggle or clicking accept all button on cookies page</li>
   <li>Sets value of <strong>cookie_status</strong> based on user clicking accept or reject button in cookie banner</li>


  </ul>

  <h3>Framework dependencies</h3>

  <p>The following scripts are imported and used in <a href="cookie-preferences.js">cookie-preferences.js</a></p>

  <ul>

  <li><a href="https://github.com/js-cookie/js-cookie/tree/latest#readme">JS Cookie</a></li>
  <li><a href="add-custom-event-listener.js">Event listener</a></li>
  <li><a href="dialog.js">Dialog modal</a></li>
  <li><a href="smooth-scroll.js">Smooth scroll</a></li>

  </ul>

  <h3>Setting cookies</h3>

	<p>Essential cookies are required to make the cookie banner and cookie page work:</p>


  <table>

  <thead>

  <tr>

  <th>Name</th>
  <th>Purpose</th>
  <th>Expires</th>

  </tr>


  </thead>

  <tbody>

  <tr>

  <td>optInGoogleTracking</td>
  <td>Holds a value of true or false, this cookie is specificly used for <a href="#js-conditionals">template conditionals</a> and it's value is set by checking the <strong>cookies_policy analytics</strong> value.</td>
  <td>1 year</td>


  </tr>

  <tr>

  <td>cookies_policy</td>
  <td><p>Used to track cookie preferences, essential and analytics.</p> <p>The data is set in JSON:</p> <p><strong>{"cookie-essential":true,"cookie-usage-analytics":true}</strong>.</p> It is then encoded to Base64, so it can be used with <a href="https://github.com/js-cookie/js-cookie/tree/latest#readme">JS cookies</a> and stored as a cookie value. The cookie value is then decoded when checking the value of the cookie.</td>
  <td>1 year</td>


  </tr>

  <tr>

  <td>cookies_status</td>
  <td>Holds value of <strong>accepted</strong> or <strong>rejected</strong> after a user changes their GA preference using the toggle or accept all button on the cookies page.</td>
  <td>1 year</td>


  </tr>

  <tr>

  <td>hide_banner</td>
  <td>Used to keep track of user hiding banner, contains value of <strong>true</strong> or <strong>false</strong>.</td>
  <td>1 year</td>


  </tr>


  </tbody>



  </table>

  <h3>Cookie preferences code</h3>

  <pre class="language-js"><code>import Cookies from 'js-cookie';
import { customEventListener } from '../utils/add-custom-event-listener';
import { cookieMessageHTML } from './cookie-banner-html.js';
import { dialogModalAjax } from '../dialogs.js';
import { smoothScroll } from '../utils/smooth-scroll';

   const setCookieSettings = { path: '/', domain: 'hse.gov.uk', secure: true, sameSite: 'strict', expires: 365 };
// const setCookieSettings = { path: '/', domain: 'beta.hse.gov.uk', secure: true, sameSite: 'strict', expires: 365 };
// const setCookieSettings = { path: '/', domain: 'localhost', secure: false, sameSite: 'strict', expires: 365 };

// So we can access Cookies inline for Analytics in the HTML
window.Cookies = Cookies;

function setFields() {
    const preferences = Cookies.get('cookies_policy');
    const settingsForm = document.getElementById('cookies-settings');

    if (settingsForm && preferences) {
        const decodedPreferences = window.atob(preferences);
        let choices = JSON.parse(decodedPreferences);

        const fields = settingsForm.querySelectorAll('.input-switch');
        [...fields].forEach((elem)=> {
            const fieldName = elem.name;
            // remember user choices
            if (choices[fieldName] === true) {
                elem.setAttribute('checked', 'checked');
            }
        });
    }
}

function setCookiePreferences(preferences) {
    const keys = Object.keys(preferences);
    keys.forEach((key)=> {
        // convert checkbox values to boolean
        if (preferences[key] === 'off') {
            preferences[key] = false;
        }
        if (preferences[key] === 'on') {
            preferences[key] = true;
        }
    });
    const stringPreferences = JSON.stringify(preferences);
    const encodedPreferences = window.btoa(stringPreferences);
    Cookies.set('cookies_policy', encodedPreferences, setCookieSettings);
    setFields();
}

function controlAnalytics() {
    // set unset GA
    const preferences = Cookies.get('cookies_policy');
    if (preferences) {
        const decodedPreferences = window.atob(preferences);
        const json = JSON.parse(decodedPreferences);
        const gaSettings = json['cookie-usage-analytics'];

        if (gaSettings === true) {
            Cookies.set('optInGoogleTracking', true, setCookieSettings);
        } else {
            Cookies.set('optInGoogleTracking', false, setCookieSettings);
            Cookies.remove('_ga', setCookieSettings);
            Cookies.remove('_gid', setCookieSettings);
            Cookies.remove('_gali', setCookieSettings);
            Cookies.remove('_dc_gtm_UA-324220-1', setCookieSettings);
            Cookies.remove('_gat_UA-324220-1', setCookieSettings);
            Cookies.remove('_ga_1Y6RD6YT11', setCookieSettings);
            Cookies.remove('nmstat', setCookieSettings); // Site Improve cookie - invoked by Google Analytics
        }
    }
}

function formFeedback() {
    const dialog = document.createElement('div');
    dialog.className = 'dialog dialog-generic';
    const content = `<div class="dialog__copy">
        <h2>Your cookie settings were saved</h2>
        <p>Some HSE digital services may set additional cookies and, if so, will have their own cookie policy and banner.</p>
        </div>
        <div class="dialog__actions">
        <button class="btn btn-cautionary close-action">Close</button>
    </div>`;
    dialog.innerHTML = content;

    const options = {
        size: 'small',
        transition: true,
        overlay: true
    };
    dialogModalAjax(dialog, options);
}

export function cookiePreferences() {
    Cookies.set('optInGoogleTracking', false, setCookieSettings);

    const body = document.getElementsByTagName('body')[0];
    const header = document.getElementById('headerContainer');
    const settingsForm = document.getElementById('cookies-settings');
    const cookiesSet = Cookies.get('cookies_policy');
    const cookieStatus = Cookies.get('cookies_status');
    const messageContainer = document.createElement('section');

    messageContainer.setAttribute('id', 'cookie-message');
    messageContainer.setAttribute('aria-label', 'Cookie message');

    let message;
    /*
    ------------------------------------
        set banner or field values
    ------------------------------------
    */
    const hideBanner = Cookies.get('hide_banner');

    if (!hideBanner || hideBanner === false) {
        message = cookieMessageHTML();
        messageContainer.innerHTML = message;
        body.insertBefore(messageContainer, header);
    }

    if (!cookiesSet) {
        // set cookie banner when cookies are not set


    } else {
        // set analytics
        controlAnalytics();
        // set fields when cookies are set
        setFields();
    }

    /*
    ------------------
        set events
    ------------------
    */

    // settings form submit
    if (settingsForm) {
        const submitForm = () => {
            const outputData = {};
            const formData = new FormData(settingsForm)
            for (var pair of formData.entries()) {
                let key = pair[0];
                let val = pair[1];
                outputData[key] = val;
            }
            setCookiePreferences(outputData);
            controlAnalytics();
            // reload to capture tracking on page this form lives
            const hideBanner = Cookies.get('hide_banner');

            if (hideBanner === undefined) {
                console.log('should scroll');
                smoothScroll('body', 1000);
                setTimeout(()=> {
                    window.location.reload();
                }, 1001);
            } else {
                setTimeout(()=> {
                    window.location.reload();
                }, 10);
            }
        };

        settingsForm.addEventListener('submit', function(event){
            event.preventDefault();
            setFields();
            submitForm();
            // formFeedback();
        });

        const choices = document.querySelectorAll('.input-switch');
        choices.forEach(elem => {
            elem.addEventListener('change', function(event){
                event.preventDefault();

                if (elem.id === 'cookie-usage-analytics') {
                    if (event.target.checked === true) {
                        Cookies.set('cookies_status', 'accepted', setCookieSettings);
                    } else {
                        Cookies.set('cookies_status', 'rejected', setCookieSettings);
                    }
                }

                submitForm();
            });
        });
    }

    // close banner
    customEventListener('#cookieNotifyClose', 'click', (event) => {
        event.preventDefault();
        // destroy banner
        Cookies.set('hide_banner', true, setCookieSettings);
        messageContainer.remove();
    });

    // accept all
    customEventListener('#acceptAllCookies', 'click' , (event) => {
        event.preventDefault();

        // set cookies
        setCookiePreferences({'cookie-essential': true, 'cookie-usage-analytics': true});
        controlAnalytics();
        // set message

        Cookies.set('cookies_status', 'accepted', setCookieSettings);
        messageContainer.innerHTML = cookieMessageHTML();

        // reload to capture tracking
        window.location.reload();
    });

    // reject all
    customEventListener('#rejectAllCookies', 'click' , (event) => {
        event.preventDefault();
        // set cookies
        setCookiePreferences({'cookie-essential': true, 'cookie-usage-analytics': false});
        controlAnalytics();

        // set message
        Cookies.set('cookies_status', 'rejected', setCookieSettings);
        messageContainer.innerHTML = cookieMessageHTML();

        // reload to capture tracking
        window.location.reload();

    });

    // form action select all cookies
    customEventListener('#setAllCookies', 'click' , (event) => {
        event.preventDefault();
        setCookiePreferences({'cookie-essential': true, 'cookie-usage-analytics': true});
        controlAnalytics();
        formFeedback();

        Cookies.set('cookies_status', 'accepted', setCookieSettings);
        messageContainer.innerHTML = cookieMessageHTML();

        // reload to capture tracking
        window.location.reload();
    });

}</code></pre>

  <h2 id="template-code">Template code</h2>

  <p>HSE.GOV.UK uses Google Tag Manager to setup Google analytics, the following JavaScript is included in the opening <strong>&lt;head&gt;</strong> tag of the website template.</p>


  <h3>Optimize anti-flicker snippet</h3>

  <p><a href="https://developers.google.com/optimize/">Optimize anti-flicker snippet</a>, which supports loading your Optimize container asynchronously while hiding the page until the container is ready</p>

<pre class="language-markup"><code>&lt;!-- Anti-flicker snippet (recommended) If installing optimise with GTM, specifcy GTM container ID  --&gt;
&lt;style&gt;
  .async-hide {
    opacity: 0 !important
  }

&lt;/style&gt;
&lt;script&gt;
  if (Cookies.get('optInGoogleTracking') === 'true') {
    (function(a, s, y, n, c, h, i, d, e) {
      s.className += ' ' + y;
      h.start = 1 * new Date;
      h.end = i = function() {
        s.className = s.className.replace(RegExp(' ?' + y), '')
      };
      (a[n] = a[n] || []).hide = h;
      setTimeout(function() {
        i();
        h.end = null
      }, c);
      h.timeout = c;
    })(window, document.documentElement, 'async-hide', 'dataLayer', 4000, {
      'GTM-PJPWMNL': true
    });
  }

&lt;/script&gt;
&lt;!-- Google Tag Manager --&gt;
&lt;script&gt;</code></pre>

  <h3>Google Tag Manager</h3>

  <p>Google Anlaytics is setup with Google Tag Manager, the code required is conditonally loaded and setup as instructed in the <a href="https://developers.google.com/tag-manager/quickstart">Google Tag Manager Quick Start Guide</a></p>


<pre class="language-markup"><code>&lt;!-- Google Tag Manager --&gt;
&lt;script&gt;
  if (Cookies.get('optInGoogleTracking') === 'true') {
    (function(w, d, s, l, i) {
      w[l] = w[l] || [];
      w[l].push({
        'gtm.start': new Date().getTime(),
        event: 'gtm.js'
      });
      var f = d.getElementsByTagName(s)[0],
        j = d.createElement(s),
        dl = l != 'dataLayer' ?
        '&amp;l=' + l :
        '';
      j.async = true;
      j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl;
      f
        .parentNode
        .insertBefore(j, f);
    })(window, document, 'script', 'dataLayer', 'GTM-PJPWMNL');

    // Siteimprove analytics

    /*&lt;![CDATA[*/
    (function() {
      var sz = document.createElement('script');
      sz.type = 'text/javascript';
      sz.async = true;
      sz.src = '//siteimproveanalytics.com/js/siteanalyze_6798.js';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(sz, s);
    })();
    /*]]&gt;*/

  }

&lt;/script&gt;
&lt;!-- End Google Tag Manager --&gt;</code></pre>

 <h3>Non-JS</h3>

 <p>While non-JavaScript code should not be required to run GTM, it has not been possible to get GTM to work without this snippet of code and requires further investigation.</p>

 <p>The following snippet is included after the opening <strong>&lt;body&gt;</strong> tag.</p>


<pre class="language-markup"><code>&lt;noscript aria-hidden=&quot;true&quot; aria-label=&quot;GTM-PJPWMNL&quot;&gt;
  &lt;iframe title=&quot;GTM-PJPWMNL&quot;
    src=&quot;https://www.googletagmanager.com/ns.html?id=GTM-PJPWMNL&quot;
    height=&quot;0&quot;
    width=&quot;0&quot;
    style=&quot;display:none;visibility:hidden&quot;
    aria-hidden=&quot;true&quot;&gt;
  &lt;/iframe&gt;
&lt;/noscript&gt;</code></pre>

<h3 id="js-conditionals">JS conditionals</h3>

<p>JS conditionals are used in the template code to check if the user has opted in, it does this by getting the value of the <strong>optInGoogleTracking</strong> cookie and checking if it is set to <strong>&lsquo;true&rsquo;</strong>.</p>

<p>The <strong>optInGoogleTracking</strong> cookie is specificaly used for template conditional statements.</p>

<pre class="language-js"><code>if (Cookies.get('optInGoogleTracking') === 'true') {

}</code></pre>
<h2 id="cookies-page">Cookies page</h2>

<p>A cookies page is used to provide the user a way to control their cookie preferences, this allows users an alternative way to the cookie banner to accept or reject analytics.</p>

<p>The HTML form inclues:</p>

 <ul>

  <li>A button to accept all cookies</li>
  <li>A checkbox styled as a switch to toggle between accepting or rejecting analytics</li>
  <li>Button to save changes</li>

 </ul>

 <h3>Auto save and refresh</h3>

 <p>Currently the form is set to save automatically when a user clicks the accept all button or toggles between accepting or rejecting analytics.</p>

 <h3>Form code</h3>

<pre class="language-markup"><code>&lt;form method=&quot;get&quot; id=&quot;cookies-settings&quot; onsubmit=&quot;&quot; action=&quot;/cookies.htm&quot;&gt;
  &lt;input type=&quot;hidden&quot; id=&quot;cookieEssential&quot; name=&quot;cookie-esstential&quot; value=&quot;on&quot; /&gt;
  &lt;button id=&quot;setAllCookies&quot; class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;Accept all cookies&lt;/button&gt;
  &lt;fieldset class=&quot;fieldset&quot;&gt;
    &lt;legend class=&quot;fieldset__legend&quot;&gt;
      &lt;h3 class=&quot;fieldset__heading&quot;&gt;Cookies that measure website use&lt;/h3&gt;
    &lt;/legend&gt;
    &lt;p&gt;Analytics measure how you use the website so we can improve it. These cookies store anonymised information about how
      you got to the site the pages you visit on HSE.gov.uk.&lt;/p&gt;
    &lt;p&gt;We do not allow any third-party analytics to use or share the data about how you
      use this site.&lt;/p&gt;
    &lt;div class=&quot;form-group&quot;&gt;
      &lt;label class=&quot;input-switch-label&quot; for=&quot;cookie-usage-analytics&quot;&gt;
        &lt;span class=&quot;visually-hidden&quot;&gt;Analytics&lt;/span&gt;
        &lt;input type=&quot;hidden&quot; id=&quot;cookieUsageAnalytics&quot; name=&quot;cookie-usage-analytics&quot; value=&quot;off&quot; /&gt;
        &lt;input class=&quot;input-switch&quot; type=&quot;checkbox&quot; id=&quot;cookie-usage-analytics&quot; name=&quot;cookie-usage-analytics&quot; /&gt;
        &lt;span class=&quot;input-switch--slider&quot;&gt;&lt;/span&gt;
      &lt;/label&gt;
    &lt;/div&gt;
  &lt;/fieldset&gt;
  &lt;h2&gt;Strictly necessary cookies&lt;/h2&gt;
  &lt;p&gt;These essential cookies do things like remember your progress
    through a form (for example a licence application)&lt;/p&gt;
  &lt;p&gt; They always need to be on.&lt;/p&gt;
  &lt;p&gt;
    &lt;a href=&quot;privacy-cookies.htm&quot;&gt; Find out more about cookies on
      HSE.gov.uk &lt;/a&gt;
  &lt;/p&gt;
  &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;Save changes&lt;/button&gt;
&lt;/form&gt;</code></pre>

  <h2 id="banner-html">Banner HTML</h2>

  <p>The JS file <a href="../cookie-banner-html.js">cookies-banner-html.js</a> contains HTML for the Cookie Banner and related banner messages.</p>

  <p>The file contains 3 cookie banner messages, contained in variables that are interchangeable depending on the outcome of the users actions.</p>

  <p>The 3 messages are:</p>

  <ul>

   <li><strong>Start message</strong> for a user that has not yet accepted or rejected analytics cookies</li>
   <li><strong>Accepted message</strong> for a user that has accepted analytics cookies</li>
   <li><strong>Rejected message</strong> for a user that has rejected analytics cookies</li>

  </ul>

  <p>To work out what message to serve, JS is used to get the value of &lsquo;cookies_status&rsquo;, a cookie which is set when the user accepts or rejects analytics in the cookie banner.</p>

  <p>A JS switch statement is used to check the value of the status variable to see if its value is 'accepted', 'rejected' or if the cookies has not been set. It then puts the outcome of this check into the cookieMessage variable which is outputted as HTML.</p>

  <h3>Banner HTML code</h3>

<pre class="language-js"><code>export function cookieMessageHTML() {
    const status = Cookies.get('cookies_status');

    const cookieMessageStart = `
      &lt;div class=&quot;cookies-message&quot;&gt;
        &lt;p class=&quot;cookies-message__heading&quot;&gt;Cookies on www.hse.gov.uk&lt;/p&gt;
        &lt;div class=&quot;cookies-message__copy&quot;&gt;
          &lt;p&gt;We use some essential cookies to make this service work.&lt;/p&gt;
          &lt;p&gt;We&rsquo;d also like to use analytics cookies so we can understand how you use the service and make improvements.&lt;/p&gt;
        &lt;/div&gt;

        &lt;div class=&quot;cookies-message__actions&quot;&gt;
          &lt;a class=&quot;btn btn-primary&quot; id=&quot;acceptAllCookies&quot; href=&quot;#&quot;&gt;Accept analytics cookies&lt;/a&gt;
          &lt;a class=&quot;btn btn-primary&quot; id=&quot;rejectAllCookies&quot; href=&quot;#&quot;&gt;Reject analytics cookie&lt;/a&gt;

          &lt;p class=&quot;cookies-message__link&quot;&gt;&lt;a href=&quot;/cookies.htm&quot;&gt;View cookies&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    `;
    const cookieMessageAccept = `
      &lt;div class=&quot;cookies-message__copy cookies-message-accepted&quot;&gt;
          &lt;p&gt;You've accepted analytics cookies. You can change your &lt;a href=&quot;/cookies.htm&quot;&gt;cookie settings&lt;/a&gt; at any time.&lt;/p&gt;
          &lt;button id=&quot;cookieNotifyClose&quot; class=&quot;btn btn-cautionary&quot;&gt;Hide&lt;/button&gt;
      &lt;/div&gt;
    `;

    const cookieMessageReject = `
      &lt;div class=&quot;cookies-message__copy cookies-message-rejected&quot;&gt;
          &lt;p&gt;You've rejected analytics cookies. You can change your &lt;a href=&quot;/cookies.htm&quot;&gt;cookie settings&lt;/a&gt; at any time.&lt;/p&gt;
          &lt;button id=&quot;cookieNotifyClose&quot; class=&quot;btn btn-cautionary&quot;&gt;Hide&lt;/button&gt;
      &lt;/div&gt;
    `;

    let cookieMessage;
    switch (status) {
        case 'accepted':
            cookieMessage = cookieMessageAccept;
            break;
        case 'rejected':
            cookieMessage = cookieMessageReject;
            break;
        default:
            cookieMessage = cookieMessageStart
            break;
    }

    const cookieBanner = `
    &lt;div id=&quot;cookieContainer&quot; class=&quot;cf&quot;&gt;
        &lt;div id=&quot;cookieNotify&quot; class=&quot;cf&quot;&gt;${cookieMessage}&lt;/div&gt;
    &lt;/div&gt;
    `;
    return cookieBanner;
}</code></pre>
<!-- InstanceEndEditable -->




<!-- Beta two column (top task) -->






 </main>




</div>




<section id="feedback" class="feedback " aria-describedby="feedback-message" aria-label="Is this page useful">
  <div class="feedback-container">
    <div class="yes-no-container">
      <div class="feedback-links">
        <p class="feedback-message" id="feedback-message"><strong>Is this page useful?</strong></p>
        <button class="btn btn-secondary" id="userYes">Yes</button>
        <button class="btn btn-secondary" id="userNo">No</button>
      </div>
    </div>
    <div class="report-a-problem-container">
		<button class="btn btn-secondary" id="report-problem-button">Report a problem with this page</button>
    </div>
  </div>
  <div class="report-a-problem-form"></div>



 </section>



<nav id="footer-nav" aria-label="Footer menu">
  <footer id="footerContainer">
    <div id="footer">
      <h2 class="visually-hidden">Footer links</h2>
      <div class="footer-links-container">
        <ul>
          <li class="first"><a href="../../search/search-results.htm">Search</a></li>
          <li><a href="../../a-z/index.htm">A-Z</a></li>
          <li><a href="../../acronym/index.htm">Acronyms</a></li>
          <li><a href="../../about/site_map/index.htm">Site map</a></li>
          <li><a href="../../copyright.htm">Copyright</a></li>
          <li><a href="../../cookies.htm">Cookies</a></li>
          <li><a href="../../privacy.htm">Privacy</a></li>
          <li><a href="../../accessibility.htm">Accessibility</a></li>
          <li><a href="../../foi/index.htm">Disclosure of information</a></li>
          <li><a href="../../report-vulnerability.htm">Vulnerability disclosure</a></li>
        </ul>
      </div>
    </div>
    <div id="baseStrip">
      <div id="baseStripInner">
        <p>HSE Design System</p>
      </div>
    </div>
  </footer>
</nav>

<section id="lastUpdated" aria-label="Last updated">
<!-- InstanceBeginEditable name="updated" --> Updated:
	<!-- #BeginDate format:IS1 -->2021-09-03<!-- #EndDate -->
	<!-- InstanceEndEditable -->
</section>

<script src="../../assets/v5-js/v5-main.min.js"></script>

<div id="gutter">
<!-- InstanceBeginEditable name="gutter" --> <!-- InstanceEndEditable -->
</div>

<!-- InstanceParam name="bodyClass" type="text" value="template" -->
<!-- InstanceParam name="layout" type="text" value="betacontentpage" -->
<!-- InstanceParam name="columnLayout" type="number" value="2" -->
<!-- InstanceParam name="platform" type="text" value="v5" -->
<!-- InstanceParam name="rdfa" type="boolean" value="false" -->
<!-- InstanceParam name="welsh" type="boolean" value="false" -->
<!-- InstanceParam name="homepage" type="boolean" value="false" -->
<!-- InstanceParam name="weblite" type="boolean" value="false" -->
<!-- InstanceParam name="feedback" type="boolean" value="true" -->
<!-- InstanceParam name="feedbackClass" type="text" value="" -->
<!-- InstanceParam name="survey" type="boolean" value="false" -->
<!-- InstanceParam name="contentType" type="text" value="default" -->
<!-- InstanceParam name="notificationBar" type="boolean" value="false" -->
<!-- InstanceParam name="infoBanner" type="boolean" value="false" -->
<!-- InstanceParam name="infoBannerContent" type="text" value="" -->
</body>
<!-- InstanceEnd --></html>