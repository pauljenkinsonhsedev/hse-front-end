/* v4.2.7 */

function hse_image_map() {
  var c = $("img.imageMap");
  c.length &&
    c.each(function () {
      var b = $(this)
          .attr("usemap")
          .match(/#?(.*)/),
        b = b[1],
        a = $('map[name="' + b + '"]').children("area"),
        c = $("#" + b + "Output").eq(0),
        e = $(this).eq(0).hasClass("noHighlights") ? !1 : !0;
      if (e) {
        var d = $("<div />")
          .css("position", "relative")
          .attr("id", b + "Container");
        $(this).wrap(d);
      }
      a.each(function () {
        $this = $(this);
        var a = $this.attr("href").match(/#?(.*)/)[1];
        c.length
          ? $("#" + a)
              .appendTo(c)
              .addClass("imageMapOutput")
              .hide()
          : $("#" + a)
              .addClass("imageMapOutput")
              .hide();
        $this.bind("mouseover focus", function () {
          $(".imageMapOutput").hide();
          $($(this).attr("href")).show();
          e && ($(".areaIndicator").hide(), $(this.indicator).show());
        });
        if (e && "rect" == $this.attr("shape").toLowerCase()) {
          var d = $this.attr("coords").split(","),
            h = d[0],
            k = d[2] - d[0],
            l = d[1],
            d = d[3] - d[1];
          this.indicator = $("<div />")
            .css({ position: "absolute", left: h + "px", top: l + "px", width: k + "px", height: d + "px", opacity: 0.25 })
            .hide()
            .addClass("areaIndicator")
            .attr("id", a + "Rollover")
            .appendTo("#" + b + "Container");
        }
      });
    });
}
// function hse_tabs_init() {
//   $(".tabContainer").semantictabs({ panel: ".tabPanel", head: "h2,h3,h4,h5,h6", active: ":first" });
// }
// function hse_tabbed_panel_init() {
//   $("#focusSwitcher").removeClass("noScript");
//   $("#focusSwitcher h2").mouseover(function () {
//     $(".newsItem").removeClass("active");
//     $(this).parent().addClass("active");
//   });
//   $("#focusSwitcher h2 a").focus(function () {
//     $(".newsItem").removeClass("active");
//     $(this).parents("div.newsItem").addClass("active");
//   });
// }
// jQuery.fn.semantictabs = function (c) {
//   var b = jQuery.extend({ panel: ".panel", head: "h3", active: ":first", activate: !1 }, c);
//   return b.activate
//     ? this.each(function () {
//         var a = jQuery(this);
//         a.find(b.panel).hide();
//         a.find("ul.tabs li").removeClass("active");
//         a.find(b.panel + ":eq(" + b.activate + ")").show();
//         a.find("ul.tabs li:eq(" + b.activate + ")").addClass("active");
//       })
//     : this.each(function () {
//         var a = jQuery(this);
//         a.find(b.panel).hide();
//         a.find(b.panel + b.active).show();
//         a.prepend('<ul class="tabs semtabs"></ul>');
//         a.find(b.panel).each(function () {
//           var c = jQuery(this).find(b.head).first().text();
//           this.title = c;
//           a.find("ul.tabs").append('<li><a href="javascript:void(0);">' + c + "</a></li>");
//         });
//         a.find("ul li" + b.active).addClass("active");
//         a.find("ul.tabs li").click(function () {
//           a.find(b.panel).hide();
//           a.find("ul.tabs li").removeClass("active");
//           a.find(b.panel + "[title='" + jQuery(this).text() + "']").show();
//           jQuery(this).addClass("active");
//         });
//         a.find("#remtabs").click(function () {
//           a.find("ul.tabs").remove();
//           a.find(b.container + " " + b.panel).show();
//           a.find("#remtabs").remove();
//         });
//       });
// };
function hse_prettyForms_init() {
  $(".hseform").length &&
    ($("form.hseform fieldset").on({
      focusin: function () {
        $(this).addClass("current");
      },
      focusout: function () {
        $(this).removeClass("current");
      },
    }),
    $(".clear-value").each(function () {
      if ($(this).val()) var c = this.value;
      else this.value = c = "";
      $(this).focus(function () {
        this.value == c && (this.value = "");
      });
      $(this).blur(function () {
        "" == this.value && (this.value = c);
      });
    }),
    $(".togglecheckbox").each(function (c) {
      $checkbox = $(this).closest("ul.radio-check").find("input[type=checkbox]:not(.togglecheckbox)");
      $(this).click(function (b) {
        $(this).attr("checked") ? $checkbox.attr("checked", "checked") : $checkbox.removeAttr("checked");
      });
      $checkbox.click(function () {
        $(this).attr("checked") ? $(".togglecheckbox").attr("checked") : $(".togglecheckbox").removeAttr("checked");
      });
    }),
    $(".checkradio-reset").each(function (c) {
      $(this).click(function (b) {
        $(this).attr("checked") && $(this).closest(".hseform").find("input[type=checkbox]:not(.checkradio-reset), input[type=radio]:checked").prop("checked", !1);
        $(this).attr("checked");
      });
      $reset = $(this).closest(".hseform").find("input[type=checkbox]:not(.checkradio-reset), input[type=radio]:checked");
      $reset.click(function () {
        $(this).attr("checked") && $(".checkradio-reset").prop("checked", !1);
      });
    }));
}
$.fn.extend({
  list2Columns: function (c) {
    $(this).each(function () {
      $(".splitList2, .splitList3, .splitList4").each(function () {
        for (var b = [], a = $(this).find("li"), f = Math.floor(a.length / c), e = a.length - f * c, d = 0; d < c; d++) b[d] = d < e ? f + 1 : f;
        for (d = 0; d < c; d++)
          for ($(this).append($("<ul ></ul>").addClass("sub-list")), f = 0; f < b[d]; f++) {
            for (var g = (e = 0); g < d; g++) e += b[g];
            $(this)
              .find(".sub-list")
              .last()
              .append(a[f + e]);
          }
      });
    });
  },
});
function hse_splitList_init() {
  $("html").hasClass("ie") && (0 != $(".splitList2").length && $(".splitList2 ul").list2Columns(2), 0 != $(".splitList3").length && $(".splitList3 ul").list2Columns(3), 0 != $(".splitList4").length && $(".splitList4 ul").list2Columns(4));
}
